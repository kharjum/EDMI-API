<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EMDI.API</name>
    </assembly>
    <members>
        <member name="T:EMDI.Controllers.ElectricMetersController">
            <summary>
            ElectricMeter Controller API
            </summary>
        </member>
        <member name="F:EMDI.Controllers.ElectricMetersController._repository">
            <summary>
            ElectricMeter Repository
            </summary>
        </member>
        <member name="M:EMDI.Controllers.ElectricMetersController.#ctor(EMDI.Repository.Interfaces.IElectricMeterRepository,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="repository">ElectricMeter Repository</param>
            <param name="mapper"> Mapper </param>
        </member>
        <member name="M:EMDI.Controllers.ElectricMetersController.Get">
            <summary>
            Get a list of ElectricMeter avaible
            </summary>
            <returns>list of ElectricMeter avaible</returns>
        </member>
        <member name="M:EMDI.Controllers.ElectricMetersController.Get(System.Int32)">
            <summary>
            Get a specific ElectricMeter
            </summary>
            <param name="id"></param>
            <returns>A ElectricMeter</returns>
        </member>
        <member name="M:EMDI.Controllers.ElectricMetersController.Post(EMDI.API.Models.ElectricMeterModel)">
            <summary>
            Add a new ElectricMeter
            </summary>
            <param name="itemModel">New ElectricMeter</param>
            <returns>Gatway added</returns>
        </member>
        <member name="M:EMDI.Controllers.ElectricMetersController.Put(EMDI.API.Models.ElectricMeterModel,System.Int32)">
            <summary>
            Update a ElectricMeter
            </summary>
            <param name="itemModel">ElectricMeter to update</param>
            <param name="id">ElectricMeter id</param>
            <returns>ElectricMeter updated</returns>
        </member>
        <member name="M:EMDI.Controllers.ElectricMetersController.Delete(System.Int32)">
            <summary>
            Delete a ElectricMeter
            </summary>
            <param name="id">ElectricMeter id</param>
            <returns>Ok</returns>
        </member>
        <member name="T:EMDI.Controllers.GatewaysController">
            <summary>
            Gateway Controller API
            </summary>
        </member>
        <member name="F:EMDI.Controllers.GatewaysController._repository">
            <summary>
            Gateway Repository
            </summary>
        </member>
        <member name="F:EMDI.Controllers.GatewaysController._mapper">
            <summary>
            Mapper
            </summary>
        </member>
        <member name="M:EMDI.Controllers.GatewaysController.#ctor(EMDI.Repository.Interfaces.IGatewaysRepository,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="repository">Gateway Repository</param>
            <param name="mapper">Mapper</param>
        </member>
        <member name="M:EMDI.Controllers.GatewaysController.Get">
            <summary>
            Get a list of Gateway avaible
            </summary>
            <remarks>This API will get all values.</remarks>
            <returns>list of Gateway avaible</returns>
        </member>
        <member name="M:EMDI.Controllers.GatewaysController.Get(System.Int32)">
            <summary>
            Get a specific gateway
            </summary>
            <remarks>This API will get a specific value.</remarks>
            <param name="id"></param>
            <returns>A gateway</returns>
        </member>
        <member name="M:EMDI.Controllers.GatewaysController.Post(EMDI.API.Models.GatewaysModel)">
            <summary>
            Add a new gateway
            </summary>
            <remarks>This API will add a new value.</remarks>
            <param name="itemModel">New Gateway</param>
            <returns>Gatway added</returns>
        </member>
        <member name="M:EMDI.Controllers.GatewaysController.Put(EMDI.API.Models.GatewaysModel,System.Int32)">
            <summary>
            Update a Gateway
            </summary>
            <remarks>This API will update a value.</remarks>
            <param name="itemModel">Gateway to update</param>
            <param name="id">Gateway id</param>
            <returns>Gateway updated</returns>
        </member>
        <member name="M:EMDI.Controllers.GatewaysController.Delete(System.Int32)">
            <summary>
            Delete a gateway
            </summary>
            <param name="id">Gateway id</param>
            <returns>Ok</returns>
        </member>
        <member name="T:EMDI.Controllers.WaterMetersController">
            <summary>
            WaterMeter Controller API
            </summary>
        </member>
        <member name="F:EMDI.Controllers.WaterMetersController._repository">
            <summary>
            WaterMeter Repository
            </summary>
        </member>
        <member name="F:EMDI.Controllers.WaterMetersController._mapper">
            <summary>
            Mapper
            </summary>
        </member>
        <member name="M:EMDI.Controllers.WaterMetersController.#ctor(EMDI.Repository.Interfaces.IWaterMeterRepository,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="repository">WaterMeter Repository</param>
            <param name="mapper"> Mapper </param>
        </member>
        <member name="M:EMDI.Controllers.WaterMetersController.Get">
            <summary>
            Get a list of WaterMeter avaible
            </summary>
            <remarks>This API will get all values.</remarks>
            <returns>list of WaterMeter avaible</returns>
        </member>
        <member name="M:EMDI.Controllers.WaterMetersController.Get(System.Int32)">
            <summary>
            Get a specific WaterMeter
            </summary>
            <remarks>This API will get a specific values.</remarks>
            <param name="id"></param>
            <returns>A WaterMeter</returns>
        </member>
        <member name="M:EMDI.Controllers.WaterMetersController.Post(EMDI.API.Models.WaterMeterModel)">
            <summary>
            Add a new WaterMeter
            </summary>
            <remarks>This API will add a values.</remarks>
            <param name="itemModel">New WaterMeter</param>
            <returns>Gatway added</returns>
        </member>
        <member name="M:EMDI.Controllers.WaterMetersController.Put(EMDI.API.Models.WaterMeterModel,System.Int32)">
            <summary>
            Update a WaterMeter
            </summary>
            <remarks>This API will update a values.</remarks>
            <param name="itemModel">WaterMeter to update</param>
            <param name="id">WaterMeter id</param>
            <returns>WaterMeter updated</returns>
        </member>
        <member name="M:EMDI.Controllers.WaterMetersController.Delete(System.Int32)">
            <summary>
            Delete a WaterMeter
            </summary>
            <remarks>This API will delete values.</remarks>
            <param name="id">WaterMeter id</param>
            <returns>Ok</returns>
        </member>
        <member name="T:EMDI.API.Models.BaseModel`1">
            <summary>
            Entidad Base
            </summary>
            <typeparam name="T"> Clase Gen√©rica de modelo </typeparam>
        </member>
    </members>
</doc>
